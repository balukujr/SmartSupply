<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
			http://www.springframework.org/schema/context 
			http://www.springframework.org/schema/context/spring-context-3.0.xsd 
			http://www.springframework.org/schema/tx 
			http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
			http://www.springframework.org/schema/aop 
			http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">


    <!-- ENABLING AUTO SCANNING OF CLASSPATH -->
    <aop:aspectj-autoproxy/>
    <context:annotation-config/>
    <context:component-scan base-package="org.smartsupply.api.service.impl"/>
    <context:component-scan base-package="org.smartsupply.api.dao.hibernateimpl"/>

    <!-- DATA ACCESS CONFIGURATION -->
    <!--<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" depends-on="settings">-->
    <bean id="dataSource" class="org.smartsupply.api.database.MyDriverManagerDataSource" depends-on="settings">
        <property name="driverClassName" value="${hibernate.connection.driver_class}"/>
        <property name="url" value="${hibernate.connection.url}"/>
        <property name="username" value="${hibernate.connection.username}"/>
        <property name="password" value="${hibernate.connection.password}"/>
        <property name="connectionProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
            </props>
        </property>
    </bean>

    <!-- LIQUIBASE CONFIGURATION -->
    <bean id="liquibase" class="org.smartsupply.api.utils.SpringLiquibaseUpdater"
          init-method="init" depends-on="dataSource">
        <property name="dataSource" ref="dataSource"/>
        <property name="changeLog"
                  value="classpath:database/${hibernate.database_type}/liquibase/db.changelog-master.xml"/>
    </bean>

    <!-- TRANSACTION MANAGEMENT -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- JPA CONFIGURATIONS -->
    <bean id="persistenceUnitManager" class="org.springframework.orm.jpa.persistenceunit.DefaultPersistenceUnitManager">
        <property name="persistenceXmlLocations">
            <list>
                <value>classpath:persistence.xml</value>
            </list>
        </property>
        <!-- if no datasource is specified, use this one -->
        <property name="defaultDataSource" ref="dataSource"/>
    </bean>

    <!--<jee:jndi-lookup id="dataSource"  jndi-name="jdbc/myAppDS"/>-->

    <bean id="entityManagerFactory"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" depends-on="liquibase">
        <property name="dataSource" ref="dataSource"/>
        <property name="loadTimeWeaver">
            <bean class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver"/>
        </property>
        <property name="persistenceUnitManager" ref="persistenceUnitManager"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
        <property name="jpaDialect">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect"/>
        </property>
    </bean>

    <bean id="searchProcessor" class="com.googlecode.genericdao.search.jpa.JPASearchProcessor">
        <constructor-arg ref="metadataUtil"/>
    </bean>

    <bean id="metadataUtil" class="org.smartsupply.api.dao.jpa.search.JPAAnnotationMetadataUtil"/>

    <bean id="connectionService" class="org.smartsupply.api.service.impl.ConnectionService">
        <constructor-arg name="dataSource" type="javax.sql.DataSource" ref="dataSource"/>
    </bean>
</beans>